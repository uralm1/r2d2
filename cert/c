#!/bin/bash

# original from https://docs.docker.com/engine/security/https/

DAYS_CA=5475
DAYS=1825

declare -A SERVERS
SERVERS[r2d2-head]="DNS:r2d2-head.uwc.local,IP:10.14.72.5"
SERVERS[r2d2-ui]="DNS:r2d2-ui.uwc.local,IP:10.14.72.8"
SERVERS[localhost]="DNS:localhost,IP:10.15.0.31"
SERVERS[gwtest1]="DNS:gwtest1.uwc.local,IP:10.2.13.131"
SERVERS[plksrv1]="DNS:plksrv1.uwc.local,IP:10.14.0.1"
SERVERS[plksrv4]="DNS:plksrv4.uwc.local,IP:10.14.0.4"
SERVERS[erebus]="DNS:erebus.uwc.local,IP:192.168.12.3"
SERVERS[fw]="DNS:fw.uwc.local,IP:10.15.0.1"
SERVERS[gwsev]="DNS:gwsev.uwc.local,IP:10.2.78.82"
SERVERS[gwkns3]="DNS:gwkns3.uwc.local,IP:10.2.68.154"


# gen CA key (give a password)
#openssl genrsa -aes256 -out ca-key.pem 4096
#openssl req -new -x509 -days $DAYS_CA -key ca-key.pem -sha256 -out ca.pem
#openssl x509 -in ca.pem -text -noout > ca.txt
#exit 0

# servers
for s in "${!SERVERS[@]}"; do
  openssl genrsa -out $s-key.pem 4096
  openssl req -subj "/CN=$s" -sha256 -new -key $s-key.pem -out $s.csr

  echo subjectAltName = ${SERVERS[$s]} > extfile.cnf
  echo extendedKeyUsage = serverAuth, clientAuth >> extfile.cnf

  openssl x509 -req -days $DAYS -sha256 -in $s.csr -CA ca.pem -CAkey ca-key.pem -CAcreateserial -out $s-cert.pem -extfile extfile.cnf

  openssl x509 -in $s-cert.pem -text -noout > $s-cert.txt
done

###
rm -v *.csr *.cnf

# view cert details
#openssl x509 -in cert.pem -text
