openapi: 3.0.0
info:
  version: '3.00'
  title: The R2d2 Head api
  description: 'API модуля Head'
paths:
  /subsys:
    get:
      summary: Имя модуля агента и версия
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: head@wispa (3.00)
            application/json:
              schema:
                type: object
                properties:
                  subsys:
                    type: string
                    example: 'head@wispa'
                  version:
                    type: string
                    example: '3.00'

  /log:
    post:
      summary: Записывает сообщение в op_log

      requestBody:
        description: log data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/log_record'
          '*/*':
            schema:
              type: string
              example: Initialization started
              description: string to put into log

      responses:
        '200':
          description: Success
        '415':
          description: Invalid JSON request body
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /log/{subsys}:
    post:
      summary: Записывает сообщение в op_log
      parameters:
        - name: subsys
          in: path
          required: true
          description: Subsystem name to put in the log record. Игнорируется если также передано в теле запроса.
          example: router@host
          schema:
            type: string
            
      requestBody:
        description: log data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/log_record'
          '*/*':
            schema:
              type: string
              example: Initialization started
              description: string to put into log

      responses:
        '200':
          description: Success
        '415':
          description: Invalid JSON request body
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /clients:
    get:
      summary: Load clients data for profiles
      parameters:
        - name: profile
          in: query
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/client_record'
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /clients/{profile}:
    get:
      summary: Load clients data for profile (deprecated)
      deprecated: true
      parameters:
        - name: profile
          in: path
          required: true
          description: profile name
          schema:
            type: string
            example: 'gwtest1'
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/client_record'
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /client/{client_id}:
    get:
      summary: Load client data
      parameters:
        - name: client_id
          in: path
          required: true
          description: client id
          schema:
            type: integer
            example: 11
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /trafstat:
    post:
      summary: Submit traffic statistics for profiles
      parameters:
        - name: profile
          in: query
          required: true
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: traffic statistics
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/traf_stats'
      responses:
        '200':
          description: Success
        '404':
          description: Bad parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /trafstat/{profile}:
    post:
      summary: Submit traffic statistics for profile (deprecated)
      deprecated: true
      parameters:
        - name: profile
          in: path
          required: true
          description: profile that submitting stats
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: traffic statistics
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/traf_stats'
      responses:
        '200':
          description: Success
        '404':
          description: Bad parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /refreshed:
    post:
      summary: Извещение о выполненной операции обновления
      description: Агенты вызывают данную функцию после удачного завершения обновления клиента. Используется для сброса флагов обновления в БД.

      requestBody:
        description: successful refresh information
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/refresh_stats'

      responses:
        '200':
          description: Success
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message

    
# Added by API Auto Mocking Plugin
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/uralm1/head/3.00

components:
  schemas:
    log_record:
      description: Data to put in DB log
      type: object
      properties:
        subsys:
          type: string
          description: Optional subsystem name instead of subsys parameter
          example: router@host
        info:
          type: string
          example: Initialization started
          description: String to put into log
          
    client_record:
      description: Client record
      type: object
      properties:
        id:
          type: integer
          description: client id
          example: 11
        login:
          type: string
          description: client login (deprecated)
          example: 'abelguzina'
        ip:
          type: string
          description: client ip4
          example: '10.15.0.33'
        mac:
          type: string
          description: client mac
          example: '11:22:33:44:55:66'
        rt:
          type: integer
          description: route type (0-ufanet, 1-beeline)
          example: 1
        no_dhcp:
          type: integer
          description: '(0-use dhcp, 1-dont use)'
          example: 0
        defjump:
          type: string
          description: 'ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY'
          example: 'ACCEPT'
        speed_in:
          type: string
          description: 'dl speed tc parameters'
          example: 'quantum 6400 rate 1mbit prio 5'
        speed_out:
          type: string
          description: 'ul speed tc parameters'
          example: 'quantum 6400 rate 1mbit ceil 1280kbit prio 5'
        profile:
          type: string
          description: 'client profile name'
          example: 'gwtest1'
    
    traf_stats:
      description: Traffic statistics
      type: object
      additionalProperties:
        $ref: '#/components/schemas/traf_record'
      example:
        1: {in: 100, out: 200}
        2: {in: 10, out: 20}
        10: {in: 110, out: 220}

    traf_record:
      description: Traffic statistics record for client id
      type: object
      properties:
        in:
          type: integer
          description: input traffic (in bytes)
          example: 100
        out:
          type: integer
          description: output traffic (in bytes)
          example: 200

    refresh_stats:
      description: Successful refresh information
      type: object
      properties:
        subsys:
          type: string
          description: Subsystem name. Имя агента должно совпадать с одним из прописанных в коде.
          example: agent@host
        id:
          type: integer
          description: client id
          example: 11