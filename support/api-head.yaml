openapi: 3.0.0
info:
  version: '3.1'
  title: The R2d2 Head api
  description: 'API модуля Head'

tags:
  - name: Agent operations
  - name: Ui list
    description: Main (clients, servers, devices) list control operation
  - name: Ui servers
  - name: Ui clients
  - name: Ui devices
  - name: Ui stats
  - name: Ui profiles
  - name: Ui agents
  - name: Ui syncqueue
  - name: Ui logging & reporting

paths:
  /subsys:
    get:
      summary: Имя модуля агента и версия
      tags: ['Agent operations']
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: head@wispa (3.00)
            application/json:
              schema:
                type: object
                properties:
                  subsys:
                    type: string
                    example: 'head@wispa'
                  version:
                    type: string
                    example: '3.00'
                  db:
                    $ref: '#/components/schemas/database_info_object'
                  db-minion:
                    $ref: '#/components/schemas/database_info_object'
                required:
                  - subsys
                  - version


  /log:
    post:
      summary: Записывает сообщение в operations или audit log
      tags: ['Agent operations']
      requestBody:
        description: log data
        required: true
        content:
          'application/json':
            schema:
              oneOf:
                - $ref: '#/components/schemas/log_record'
                - $ref: '#/components/schemas/audit_log_record'
          '*/*':
            schema:
              type: string
              example: Initialization started
              description: string to put into log

      responses:
        '200':
          description: Success
        '415':
          description: Invalid JSON request body
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /log/{subsys}:
    post:
      summary: Записывает сообщение в operations или audit log
      tags: ['Agent operations']
      parameters:
        - name: subsys
          in: path
          required: true
          description: Subsystem name to put in the log record. Игнорируется если также передано в теле запроса.
          example: router@host
          schema:
            type: string
            
      requestBody:
        description: log data
        required: true
        content:
          'application/json':
            schema:
              oneOf:
                - $ref: '#/components/schemas/log_record'
                - $ref: '#/components/schemas/audit_log_record'
          '*/*':
            schema:
              type: string
              example: Initialization started
              description: string to put into operation log

      responses:
        '200':
          description: Success
        '415':
          description: Invalid JSON request body
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /clients:
    get:
      summary: Load devices data for profiles
      tags: ['Agent operations']
      deprecated: true
      parameters:
        - name: profile
          in: query
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/device_record'
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /devices:
    get:
      summary: Load devices data for profiles
      tags: ['Agent operations']
      parameters:
        - name: profile
          in: query
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/device_record'
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /client/{device_id}:
    get:
      summary: Load device data
      tags: ['Agent operations']
      deprecated: true
      parameters:
        - name: device_id
          in: path
          required: true
          description: 'Device id'
          schema:
            type: integer
            example: 11
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /device/{device_id}:
    get:
      summary: Load device data
      tags: ['Agent operations']
      parameters:
        - name: device_id
          in: path
          required: true
          description: 'Device id'
          schema:
            type: integer
            example: 11
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /trafstat:
    post:
      summary: Submit traffic statistics for profiles
      tags: ['Agent operations']
      parameters:
        - name: profile
          in: query
          required: true
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: traffic statistics
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/traf_stats'
      responses:
        '200':
          description: Success
        '404':
          description: Bad parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /refreshed:
    post:
      summary: Извещение о выполненной операции обновления
      description: Агенты вызывают данную функцию после удачного завершения обновления клиента. Используется для сброса флагов обновления в БД.
      tags: ['Agent operations']

      parameters:
        - name: profile
          in: query
          required: true
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: successful refresh information
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/refresh_stats'

      responses:
        '200':
          description: Success
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /blocked:
    post:
      summary: Извещение о выполненной операции блокирования/разблокирования
      description: Агенты вызывают данную функцию после удачного завершения блокирования/разблокирования клиентского устройства. Используется для сброса флага блокирования в БД.
      tags: ['Agent operations']

      parameters:
        - name: profile
          in: query
          required: true
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: successful block/unblock information
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/block_stats'

      responses:
        '200':
          description: Success
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /reloaded:
    post:
      summary: Извещение о выполненной операции перезагрузки всех клиентов
      description: Агенты вызывают данную функцию после завершения перезагрузки всех клиентов.
      tags: ['Agent operations']

      parameters:
        - name: profile
          in: query
          required: true
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: successful reload information
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/reload_stats'

      responses:
        '200':
          description: Success
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/list:
    get:
      summary: Получение списка клиентов и серверов
      description: Запрос списка клиентов и серверов.
      tags: ['Ui list']
      parameters:
        - name: page
          in: query
          description: Текущая страница (начиная с 1)
          schema:
            type: integer
            example: 2
        - name: lop
          in: query
          required: true
          description: Число строк на странице (lines_on_page)
          schema:
            type: integer
            example: 20
        - name: lostonlyifexist
          in: query
          description: Включение=1 режима получения только 'потерянных' (lost) клиентов. В данном режиме массив d будет содержать данные только по 'потерянным' клиентам, если такие имеются. Число строк и страниц ответа будут скорректированы соответственно. Если потерянных клиентов нет, то будут возвращены все клиенты. Флаг  has_lost_clients в ответе устанавливается в 0 или 1 при любом случае.
          schema:
            type: integer
            enum: [0, 1]
            example: 1
        - name: s
          in: query
          description: Строка поиска, необязательная, поиск по cn,login-подстрока, ip/mac адресу
          schema:
            type: string
            example: '192.168.1.1'
        - name: v
          in: query
          description: Режим просмотра, необязательный
          schema:
            type: string
            enum: ['','clients','lost','pain','servers','devices','flagged','blocked']
            example: 'lost'
        - name: sort
          in: query
          description: Режим сортировки, необязательный
          schema:
            type: string
            enum: ['','cn','login','ip','mac','place','rt']
            example: 'ip'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_list'
        '400':
          description: Ошибка в параметрах, в основном неверный номер текущей страницы
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/search/0:
    get:
      summary: Поиск клиентов
      description: Поиск среди клиентов по подстроке, пейджинг не поддерживается.
      tags: ['Ui clients']
      parameters:
        - name: s
          in: query
          required: true
          description: Подстрока поиска (регистронезависимая)
          schema:
            type: string
            example: 'иванов'
        - name: limit
          in: query
          description: Максимальное количество результатов выдачи (по умолчанию 5)
          schema:
            type: integer
            example: 5

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_client_search_result'
        '400':
          description: Ошибка в параметрах
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/search/1:
    get:
      summary: Поиск клиента по логину
      description: Поиск клиента по логину, пейджинг не поддерживается.
      tags: ['Ui clients']
      parameters:
        - name: login
          in: query
          required: true
          description: Логин для поиска
          schema:
            type: string
            example: 'sidorov'

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_record'
        '400':
          description: Ошибка в параметрах
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '404':
          description: Не найдено
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/server/{server_id}:
    get:
      summary: Запрос данных по серверу
      tags: ['Ui servers']
      parameters:
        - name: server_id
          in: path
          required: true
          description: 'Server id'
          schema:
            type: integer

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

    put:
      summary: Редактирование данных сервера
      description: Свойство id необязательное, если указывается то должно совпадать с параметром server_id. Свойство create_time игнорируется.
      tags: ['Ui servers']
      parameters:
        - name: server_id
          in: path
          required: true
          description: 'Server id'
          schema:
            type: integer

      requestBody:
        description: 'Server data'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/server_record'

      responses:
        '200':
          description: Success
        '400':
          description: Refused, duplicate server exist
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

    delete:
      summary: Удаление сервера
      tags: ['Ui servers']
      parameters:
        - name: server_id
          in: path
          required: true
          description: 'Server id'
          schema:
            type: integer

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/server/limit/{server_id}:
    patch:
      summary: Изменение лимита и режима квоты сервера
      tags: ['Ui servers']
      parameters:
        - name: server_id
          in: path
          required: true
          description: Server id
          schema:
            type: integer

      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                qs:
                  type: integer
                  description: quote mode (0-disabled, 1-notify, 2-limit, 3-block)
                  enum: [0,1,2,3]
                  example: 2
                limit_in:
                  type: integer
                  description: quota limit in bytes
                  example: 1073741824
                add_sum:
                  type: integer
                  description: 1-добавить временно (reset_sum игнорируется), 0-установить лимит
                  enum: [0,1]
                  example: 0
                reset_sum:
                  type: integer
                  description: 1-сбросить счетчик лимита (сразу вступит в действие) или 0-просто установить лимит (вступит в действие с начала месяца)
                  enum: [0,1]
                  example: 1
              required:
                - qs
                - limit_in
                - add_sum
                - reset_sum

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/server:
    post:
      summary: Добавление нового сервера
      tags: ['Ui servers']
      requestBody:
        description: Server data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/server_record'

      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                description: Inserted server id
        '400':
          description: Refused, duplicate server exist
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message      


  /ui/client/{client_id}:
    get:
      summary: Запрос данных по клиенту
      tags: ['Ui clients']
      parameters:
        - name: client_id
          in: path
          required: true
          description: 'Client id'
          schema:
            type: integer

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_full_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

    put:
      summary: Редактирование данных клиента
      description: Свойство id необязательное, если указывается то должно совпадать с параметром client_id. Свойство create_time игнорируется.
      tags: ['Ui clients']
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id
          schema:
            type: integer
            
      requestBody:
        description: Client data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/client_record'

      responses:
        '200':
          description: Success
        '400':
          description: Refused, duplicate client exist
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


    delete:
      summary: Удаление клиента
      tags: ['Ui clients']
      parameters:
        - name: client_id
          in: path
          required: true
          description: 'Client id'
          schema:
            type: integer

      responses:
        '200':
          description: Success
        '400':
          description: Deletion refused, client devices exist
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/client/0/{client_id}:
    patch:
      summary: Редактирование описания (description) и флага извещения (email_notify) клиента
      description: Свойство id необязательное, если указывается, то должно совпадать с параметром client_id.
      tags: ['Ui clients']
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id
          schema:
            type: integer
            
      requestBody:
        description: Client description
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Код клиента
                desc:
                  type: string
                  description: Описание клиента, возможно пустое
                  example: 'Краткое описание'
                email_notify:
                  type: integer
                  description: Флаг извещения клиента, 0 или 1
                  example: 1
              required:
                - desc
                - email_notify

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/client/1/bylogin:
    patch:
      summary: Редактирование флага извещения (email_notify) клиента
      description: По логину клиента.
      tags: ['Ui clients']

      requestBody:
        description: Client login and email_notify flag
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                login:
                  type: string
                  description: Логин клиента
                email_notify:
                  type: integer
                  description: Устанавливаемый флаг извещения клиента, 0 или 1
                  example: 1
              required:
                - login
                - email_notify

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad login parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/client:
    post:
      summary: Добавление нового клиента
      tags: ['Ui clients']
      requestBody:
        description: Client data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/client_record'

      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                description: Inserted client id
        '400':
          description: Refused, duplicate client exist
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message      


  /ui/device/{client_id}/{device_id}:
    get:
      summary: Данные по клиентскому устройству
      tags: ['Ui devices']
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id
          schema:
            type: integer
        - name: device_id
          in: path
          required: true
          description: Device id
          schema:
            type: integer

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_device_record'
        '404':
          description: Not found, including bad client_id or device_id parameters
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

    put:
      summary: Редактирование клиентского устройства
      tags: ['Ui devices']
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id
          schema:
            type: integer
        - name: device_id
          in: path
          required: true
          description: Device id
          schema:
            type: integer

      requestBody:
        description: Server data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/client_device_record'

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad client_id or device_id parameters
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


    delete:
      summary: Удаление клиентского устройства
      tags: ['Ui devices']
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id
          schema:
            type: integer
        - name: device_id
          in: path
          required: true
          description: Device id
          schema:
            type: integer

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad client_id or device_id parameters
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/device/move/{client_id}/{device_id}:
    patch:
      summary: Перенос устройства от одного клиента к другому
      description: Свойство id необязательное, если указывается, то должно совпадать с параметром client_id.
      tags: ['Ui devices']
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id предыдущего владельца
          schema:
            type: integer
        - name: device_id
          in: path
          required: true
          description: Device id
          schema:
            type: integer

      requestBody:
        description: New client id
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: Код старого клиента
                newid:
                  type: integer
                  description: Код нового клиента
              required:
                - newid

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/device/limit/{client_id}/{device_id}:
    patch:
      summary: Изменение лимита и режима квоты устройства
      tags: ['Ui devices']
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id владельца устройства
          schema:
            type: integer
        - name: device_id
          in: path
          required: true
          description: Device id
          schema:
            type: integer

      requestBody:
        required: true
        content:
          'application/json':
            schema:
              type: object
              properties:
                qs:
                  type: integer
                  description: quote mode (0-disabled, 1-notify, 2-limit, 3-block)
                  enum: [0,1,2,3]
                  example: 2
                limit_in:
                  type: integer
                  description: quota limit in bytes
                  example: 1073741824
                add_sum:
                  type: integer
                  description: 1-добавить временно (reset_sum игнорируется), 0-установить лимит
                  enum: [0,1]
                  example: 0
                reset_sum:
                  type: integer
                  description: 1-сбросить счетчик лимита (сразу вступит в действие) или 0-просто установить лимит (вступит в действие с начала месяца)
                  enum: [0,1]
                  example: 1
              required:
                - qs
                - limit_in
                - add_sum
                - reset_sum

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/device/{client_id}:
    post:
      summary: Добавление нового клиентского устройства
      tags: ['Ui devices']
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id
          schema:
            type: integer
      requestBody:
        description: Device data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/client_device_record'

      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                description: Inserted device id
        '404':
          description: Not found, including bad client_id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/stat/device/{client_id}/{device_id}:
    get:
      summary: Получение данных по трафику для клиентского устройства
      tags: ['Ui stats']
      parameters:
        - name: client_id
          in: path
          required: true
          description: Client id
          schema:
            type: integer
        - name: device_id
          in: path
          required: true
          description: Device id
          schema:
            type: integer
        - name: rep
          in: query
          description: Report type, can be day,month or not set
          schema:
            type: string
            enum: [day, month]
      
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/stat_device_record'
        '404':
          description: Not found, including bad client_id or device_id parameters
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/stat/server/{server_id}:
    get:
      summary: Получение данных по трафику для сервера
      tags: ['Ui stats']
      parameters:
        - name: server_id
          in: path
          required: true
          description: Server id
          schema:
            type: integer
        - name: rep
          in: query
          description: Report type, can be day,month or not set
          schema:
            type: string
            enum: [day, month]
      
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/stat_server_record'
        '404':
          description: Not found, including bad server_id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/stat/client/{client_id}:
    get:
      summary: Получение данных по трафику для клиента
      tags: ['Ui stats']
      parameters:
        - name: client_id
          in: path
          required: true
          description: 'Client id'
          schema:
            type: integer
        - name: rep
          in: query
          description: Report type, can be day,month or not set
          schema:
            type: string
            enum: [day, month]
      
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/stat_client_record'
        '404':
          description: Not found, including bad client_id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/profiles:
    get:
      summary: Получение перечня профилей и их имен
      description: Получение перечня профилей и их имен в кратком виде для загрузки в поля выбора пользовательских форм
      tags: ['Ui profiles']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_profiles'
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/profiles/status:
    get:
      summary: Получение состояния системы R2D2
      description: Запрос текущего состояния инфраструктуры R2D2.
      tags: ['Ui profiles']
      parameters:
        - name: page
          in: query
          description: Текущая страница (начиная с 1)
          schema:
            type: integer
            example: 2
        - name: lop
          in: query
          required: true
          description: Число строк на странице (lines_on_page)
          schema:
            type: integer
            example: 20

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_profiles_status'
        '400':
          description: Ошибка в параметрах, в основном неверный номер текущей страницы
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/profiles/list:
    get:
      summary: Получение списка объектов и агентов
      description: Запрос списка объектов и агентов системы для интерфейса редактирования.
      tags: ['Ui profiles']
      parameters:
        - name: page
          in: query
          description: Текущая страница (начиная с 1)
          schema:
            type: integer
            example: 2
        - name: lop
          in: query
          required: true
          description: Число строк на странице (lines_on_page)
          schema:
            type: integer
            example: 20

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_profiles_list'
        '400':
          description: Ошибка в параметрах, в основном неверный номер текущей страницы
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/profile/{profile_id}:
    get:
      summary: Запрос данных по объекту (профилю)
      tags: ['Ui profiles']
      parameters:
        - name: profile_id
          in: path
          required: true
          description: Profile id
          schema:
            type: integer

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profile_full_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


    put:
      summary: Редактирование объекта (профиля)
      description: Свойство id необязательное, если указывается то должно совпадать с параметром profile_id.
      tags: ['Ui profiles']
      parameters:
        - name: profile_id
          in: path
          required: true
          description: Profile id
          schema:
            type: integer
            
      requestBody:
        description: Profile data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/profile_record'

      responses:
        '200':
          description: Success
        '400':
          description: Refused, duplicate profile exist
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


    delete:
      summary: Удаление объекта (профиля)
      tags: ['Ui profiles']
      parameters:
        - name: profile_id
          in: path
          required: true
          description: Profile id
          schema:
            type: integer

      responses:
        '200':
          description: Success
        '400':
          description: Deletion refused, profile agents exist
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/profile:
    post:
      summary: Добавление нового объекта (профиля)
      tags: ['Ui profiles']
      requestBody:
        description: New profile data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/profile_record'

      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                description: Inserted profile id
        '400':
          description: Refused, duplicate profile exist
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message      


  /ui/agent/{profile_id}/{agent_id}:
    get:
      summary: Запрос данных по агенту
      tags: ['Ui agents']
      parameters:
        - name: profile_id
          in: path
          required: true
          description: Profile id
          schema:
            type: integer
        - name: agent_id
          in: path
          required: true
          description: Agent id
          schema:
            type: integer

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/profile_agent_record'
        '404':
          description: Not found, including bad profile_id or agent_id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


    put:
      summary: Редактирование агента
      description: Свойство id необязательное, если указывается то должно совпадать с параметром agent_id.
      tags: ['Ui agents']
      parameters:
        - name: profile_id
          in: path
          required: true
          description: Profile id
          schema:
            type: integer
        - name: agent_id
          in: path
          required: true
          description: Agent id
          schema:
            type: integer

      requestBody:
        description: Agent data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/profile_agent_record'

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad profile_id or agent_id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


    delete:
      summary: Удаление агента
      tags: ['Ui agents']
      parameters:
        - name: profile_id
          in: path
          required: true
          description: Profile id
          schema:
            type: integer
        - name: agent_id
          in: path
          required: true
          description: Agent id
          schema:
            type: integer

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad profile_id or agent_id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/agent/{profile_id}:
    post:
      summary: Добавление нового агента
      tags: ['Ui agents']
      parameters:
        - name: profile_id
          in: path
          required: true
          description: Profile id
          schema:
            type: integer
      requestBody:
        description: New agent data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/profile_agent_record'

      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                description: Inserted agent id
        '404':
          description: Not found, including bad profile_id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message      


  /ui/syncqueue/status:
    get:
      summary: Получение состояния очереди синхронизации
      description: Запрос текущего состояния очереди синхронизации.
      tags: ['Ui syncqueue']

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_syncqueue_status'
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/log/oplog:
    get:
      summary: Получение лога операций
      description: Просмотр лога операций в интерфейсе пользователя.
      tags: ['Ui logging & reporting']
      parameters:
        - name: page
          in: query
          description: Текущая страница (начиная с 1)
          schema:
            type: integer
            example: 2
        - name: lop
          in: query
          required: true
          description: Число строк на странице (lines_on_page)
          schema:
            type: integer
            example: 50

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_oplog'
        '400':
          description: Ошибка в параметрах, в основном неверный номер текущей страницы
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/log/audit:
    get:
      summary: Получение лога аудита
      description: Просмотр лога аудита в интерфейсе пользователя.
      tags: ['Ui logging & reporting']
      parameters:
        - name: page
          in: query
          description: Текущая страница (начиная с 1)
          schema:
            type: integer
            example: 2
        - name: lop
          in: query
          required: true
          description: Число строк на странице (lines_on_page)
          schema:
            type: integer
            example: 50

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_auditlog'
        '400':
          description: Ошибка в параметрах, в основном неверный номер текущей страницы
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /ui/rep/macdup:
    get:
      summary: Получение данных отчета по дубликатам MAC
      tags: ['Ui logging & reporting']
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: Код устройства
                    name:
                      type: string
                      description: Наименование устройства
                      example: 'Рабочий ноутбук'
                    mac:
                      type: string
                      description: device mac
                      example: '11:22:33:44:55:66'
                    ip:
                      type: string
                      description: device ip4
                      example: '10.15.0.33'
                    no_dhcp:
                      type: integer
                      description: (0-use dhcp, 1-dont use)
                      example: 0
                    profile:
                      type: string
                      description: device profile (key)
                      example: 'gwtest1'
                    profile_name:
                      type: string
                      description: device profile human readable name
                      example: 'Тестовое подразделение'
                    client_id:
                      type: integer
                      description: Код клиента владельца устройства
                      example: 456
                    client_cn:
                      type: string
                      description: ФИО клиента владельца устройства
                      example: 'Иванов Иван Иванович'
                  required:
                    - id
                    - name
                    - mac
                    - ip
                    - no_dhcp
                    - profile
                    - client_id
                    - client_cn
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message


# Added by API Auto Mocking Plugin
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/uralm1/head/3.1


components:
  schemas:
    log_record:
      description: Data to put in operation log
      type: object
      properties:
        subsys:
          type: string
          description: Optional subsystem name instead of subsys parameter
          example: router@host
        info:
          type: string
          example: Initialization started
          description: String to put into log
      required:
        - info


    audit_log_record:
      description: Data to put in audit log
      type: object
      properties:
        login:
          type: string
          description: Optional login name
          example: testuser
        audit:
          type: string
          example: Operation started
          description: String to put into audit log
      required:
        - audit


    device_record:
      description: Device record
      type: object
      properties:
        id:
          type: integer
          description: device id
          example: 11
        ip:
          type: string
          description: device ip4
          example: '10.15.0.33'
        mac:
          type: string
          description: device mac
          example: '11:22:33:44:55:66'
        rt:
          type: integer
          description: route type (0-ufanet, 1-beeline)
          example: 1
        no_dhcp:
          type: integer
          description: (0-use dhcp, 1-dont use)
          example: 0
        defjump:
          type: string
          description: ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY
          example: 'ACCEPT'
        speed_in:
          type: string
          description: dl speed tc parameters
          example: 'quantum 6400 rate 1mbit prio 5'
        speed_out:
          type: string
          description: ul speed tc parameters
          example: 'quantum 6400 rate 1mbit ceil 1280kbit prio 5'
        qs:
          type: integer
          description: quote mode (0-disabled, 1-notify, 2-limit, 3-block)
          example: 2
        blocked:
          type: integer
          description: blocked flag (0-unblocked, 1-blocked)
          example: 0
        profile:
          type: string
          description: 'client profile name (key)'
          example: 'gwtest1'

    
    traf_stats:
      description: Traffic statistics
      type: object
      additionalProperties:
        type: object
        description: Traffic statistics record for client id
        properties:
          in:
            type: integer
            description: input traffic (in bytes)
            example: 100
          out:
            type: integer
            description: output traffic (in bytes)
            example: 200
      example:
        1: {in: 100, out: 200}
        2: {in: 10, out: 20}
        10: {in: 110, out: 220}


    refresh_stats:
      description: Successful refresh information
      type: object
      properties:
        subsys:
          type: string
          description: Subsystem name. Имя агента должно совпадать с одним из прописанных в коде.
          example: agent@host
        id:
          type: integer
          description: device id
          example: 11

          
    block_stats:
      description: Successful block/unblock information
      type: object
      properties:
        subsys:
          type: string
          description: Subsystem name. Имя агента должно совпадать с одним из прописанных в коде.
          example: agent@host
        id:
          type: integer
          description: client device id
          example: 11
        qs:
          type: integer
          description: Operation (0-unblocked, 2-limited, 3-blocked)
          example: 0

          
    reload_stats:
      description: Successful reload information
      type: object
      properties:
        subsys:
          type: string
          description: Subsystem name. Имя агента должно совпадать с одним из прописанных в коде.
          example: agent@host


    ui_oplog:
      description: Страница данных лога операций
      type: object
      properties:
        lines_total:
          type: integer
          description: Всего строк в БД лога
        pages:
          type: integer
          description: Всего страниц данных в логе
        page:
          type: integer
          description: Текущая страница, возвращенная в данном объекте. Равна параметру запроса.
        lines_on_page:
          type: integer
          description: Строк на одной странице. Равно параметру запроса.
        d:
          type: array
          description: Массив строк
          items:
            description: Строка лога
            type: object
            properties:
              id:
                type: integer
                description: Код записи лога
                example: '54321'
              date:
                type: string
                description: Время события (14:04:24 30-04-21)
                example: '14:04:24 30-04-21'
              subsys:
                type: string
                description: Подсистема
                example: 'gwsyn@gwsev'
              info:
                type: string
                description: Описание события
                example: 'Finished traffic_stat'
      example:
        lines_total: 1000
        pages: 10
        page: 1
        lines_on_page: 100
        d:
          - id: 54321
            date: '14:04:24 30-04-21'
            subsys: 'gwsyn@gwsev'
            info: 'Finished traffic_stat'


    ui_auditlog:
      description: Страница данных лога аудита
      type: object
      properties:
        lines_total:
          type: integer
          description: Всего строк в БД лога
        pages:
          type: integer
          description: Всего страниц данных в логе
        page:
          type: integer
          description: Текущая страница, возвращенная в данном объекте. Равна параметру запроса.
        lines_on_page:
          type: integer
          description: Строк на одной странице. Равно параметру запроса.
        d:
          type: array
          description: Массив строк
          items:
            description: Строка лога
            type: object
            properties:
              id:
                type: integer
                description: Код записи лога
                example: '54321'
              date:
                type: string
                description: Время события (14:04:24 30-04-21)
                example: '14:04:24 30-04-21'
              login:
                type: string
                description: Логин пользователя
                example: 'testuser'
              info:
                type: string
                description: Описание события
                example: 'Редактирование клиента: testclient.'
      example:
        lines_total: 1000
        pages: 10
        page: 1
        lines_on_page: 100
        d:
          - id: 54321
            date: '14:04:24 30-04-21'
            login: 'testuser'
            info: 'Редактирование клиента: testclient.'


    ui_list:
      description: Страница данных перечня клиентов
      type: object
      properties:
        lines_total_all:
          type: integer
          description: Всего строк данных
        lines_total:
          type: integer
          description: Всего строк данных (отфильтрованных)
        pages:
          type: integer
          description: Всего страниц данных
        page:
          type: integer
          description: Текущая страница, возвращенная в данном объекте. Равна параметру запроса.
        lines_on_page:
          type: integer
          description: Строк на одной странице. Равно параметру запроса.
        view_mode:
          type: string
          description: Режим просмотра, список по клиентам или по устройствам. Связан с типом объектов, выдаваемых в аттрибуте d.
          enum: ['clients', 'devices']
        has_lost_clients:
          type: integer
          enum: [0, 1]
          description: Флаг наличия 'потерянных' клиентов (0 или 1)
        has_pain_clients:
          type: integer
          enum: [0, 1]
          description: Флаг наличия добавленных вручную клиентов (0 или 1)
        d:
          type: array
          description: Массив строк
          items:
            oneOf:
              - $ref: '#/components/schemas/client_full_record'
              - $ref: '#/components/schemas/client_device_record'
              
      required:
        - lines_total_all
        - lines_total
        - pages
        - page
        - lines_on_page
        - view_mode
        - has_lost_clients
        - has_pain_clients
        - d
      example:
        lines_total: 1000
        pages: 50
        page: 1
        lines_on_page: 20
        view_mode: 'clients'
        has_lost_clients: 0
        has_pain_clients: 1
        d:
          TODO: 'Массив client_full_record или ...'


    ui_profiles:
      description: Хеш массив профилей и их названий
      type: object
      additionalProperties:
        type: string
      example:
        plk: 'Производственно-лабораторный комплекс'
        test1: 'Тестовый объект'


    ui_profiles_status:
      description: Страница данных состояний профилей системы
      type: object
      properties:
        lines_total:
          type: integer
          description: Всего строк данных
        pages:
          type: integer
          description: Всего страниц данных
        page:
          type: integer
          description: Текущая страница, возвращенная в данном объекте. Равна параметру запроса.
        lines_on_page:
          type: integer
          description: Строк на одной странице. Равно параметру запроса.
        d:
          type: array
          description: Массив строк
          items:
            $ref: '#/components/schemas/system_profile_record'
      required:
        - lines_total
        - pages
        - page
        - lines_on_page
        - d


    ui_profiles_list:
      description: Страница данных списка профилей системы
      type: object
      properties:
        lines_total:
          type: integer
          description: Всего строк данных
        pages:
          type: integer
          description: Всего страниц данных
        page:
          type: integer
          description: Текущая страница, возвращенная в данном объекте. Равна параметру запроса.
        lines_on_page:
          type: integer
          description: Строк на одной странице. Равно параметру запроса.
        d:
          type: array
          description: Массив строк
          items:
            $ref: '#/components/schemas/profile_full_record'
      required:
        - lines_total
        - pages
        - page
        - lines_on_page
        - d


    ui_client_search_result:
      description: Результаты поиска клиентов
      type: array
      items:
        $ref: '#/components/schemas/client_record'



    ui_syncqueue_status:
      description: Содержимое очереди синхронизации (массив)
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            description: Наименование устройства
            example: 'Рабочий ноутбук'
          client_cn:
            type: string
            description: ФИО клиента владельца устройства
            example: 'Иванов Иван Иванович'
          ip:
            type: string
            description: device ip4
            example: '10.15.0.33'
          profile:
            type: string
            description: device profile (key)
            example: 'gwtest1'
          profile_name:
            type: string
            description: device profile human readable name
            example: 'Тестовое подразделение'
          agent_name:
            type: string
            description: Наименование агента
          agent_type:
            type: string
            description: 'Тип (подсистема) агента, возможны 2 формата: тип или тип@имя_хоста. Второй вариант используется в случае, когда в одном профиле имеются несколько агентов одного типа.'
        required:
        - name
        - ip
        - profile
        - agent_name
        - agent_type


    server_record:
      description: Server record
      type: object
      properties:
        id:
          type: integer
          description: Код сервера (not required on new)
        cn:
          type: string
          description: Наименование
          example: 'Сервер DC1'
        desc:
          type: string
          description: Описание сервера, возможно пустое
          example: 'Краткое описание'
        create_time:
          type: string
          description: Время создания (14:04:24 30-04-21, not required on new)
          example: '14:04:24 30-04-21'
        email:
          type: string
          description: Email для уведомлений
          example: 'user@domain.tld'
        email_notify:
          type: integer
          description: Уведомлять по эл.почте (0 или 1)
          example: 1
        ip:
          type: string
          description: client ip4
          example: '10.15.0.33'
        mac:
          type: string
          description: client mac
          example: '11:22:33:44:55:66'
        rt:
          type: integer
          description: route type (0-ufanet, 1-beeline)
          example: 1
        no_dhcp:
          type: integer
          description: (0-use dhcp, 1-dont use)
          example: 0
        defjump:
          type: string
          description: ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY
          example: 'ACCEPT'
        speed_in:
          type: string
          description: dl speed tc parameters
          example: 'quantum 6400 rate 1mbit prio 5'
        speed_out:
          type: string
          description: ul speed tc parameters
          example: 'quantum 6400 rate 1mbit ceil 1280kbit prio 5'
        qs:
          type: integer
          description: quote mode (0-disabled, 1-notify, 2-limit, 3-block)
          example: 2
        limit_in:
          type: integer
          description: quota limit in bytes
          example: 1073741824
        sum_limit_in:
          type: integer
          description: remaining limit in bytes (not required on new)
          example: 1073741824
        blocked:
          type: integer
          description: blocked flag (0-unblocked, 1-blocked)
          enum: [0, 1]
          example: 0
        flagged:
          type: integer
          description: sync flag (0-not set, 1-set)
          enum: [0, 1]
          example: 0
        profile:
          type: string
          description: server profile (key)
          example: 'gwtest1'
        profile_name:
          type: string
          description: server profile human readable name (передается в операциях чтения данных, игнорируется в операциях записи, редактирования)
          example: 'Тестовое подразделение'          
      required:
        - cn
        - ip
        - mac
        - no_dhcp
        - rt
        - defjump
        - speed_in
        - speed_out
        - qs
        - limit_in
        - profile


    client_record:
      description: Client record
      type: object
      properties:
        id:
          type: integer
          description: Код клиента (not required on new)
        cn:
          type: string
          description: Фамилия Иия Отчество
          example: 'Иванов Иван Иванович'
        desc:
          type: string
          description: Описание клиента, возможно пустое
          example: 'Краткое описание'
        guid:
          type: string
          description: ObjectGUID клиента, возможно пустое для клиентов добавленных вручную
          example: 'b95108ab-236a-4534-9ef0-6b8fa1cd59fd'
        create_time:
          type: string
          description: Время создания (14:04:24 30-04-21, not required on new)
          example: '14:04:24 30-04-21'
        login:
          type: string
          description: Логин клиента (пустой для серверов)
          example: 'user'
        email:
          type: string
          description: Email клиента
          example: 'user@domain.tld'
        email_notify:
          type: integer
          description: Уведомлять по эл.почте (0 или 1)
          example: 1
      required:
        - cn
        - guid
        - login


    client_full_record:
      description: Client list record including device list
      type: object
      properties:
        id:
          type: integer
          description: Код клиента
        type:
          type: integer
          description: 'Тип клиента: 0-клиент, 1-сервер'
        cn:
          type: string
          description: Фамилия Иия Отчество
          example: 'Иванов Иван Иванович'
        desc:
          type: string
          description: Описание клиента, возможно пустое
          example: 'Краткое описание'
        guid:
          type: string
          description: ObjectGUID клиента, возможно пустое для клиентов добавленных вручную
          example: 'b95108ab-236a-4534-9ef0-6b8fa1cd59fd'
        create_time:
          type: string
          description: Время создания (14:04:24 30-04-21)
          example: '14:04:24 30-04-21'
        login:
          type: string
          description: Логин клиента (пустой для серверов)
          example: 'user'
        email:
          type: string
          description: Email клиента
          example: 'user@domain.tld'
        email_notify:
          type: integer
          description: Уведомлять по эл.почте (0 или 1)
          example: 1
        lost:
          type: integer
          description: Потерянный=удаленный в AD клиент (0 или 1)
          example: 0
        devices:
          type: array
          description: Массив устройств
          items:
            $ref: '#/components/schemas/client_device_record'
      required:
        - id
        - type
        - cn
        - desc
        - guid
        - create_time
        - login
        - email
        - email_notify
        - lost
        - devices


    client_device_record:
      description: Client device record
      type: object
      properties:
        id:
          type: integer
          description: Код устройства (not required on new)
        name:
          type: string
          description: Наименование
          example: 'Рабочий ноутбук'
        desc:
          type: string
          description: Описание, возможно пустое
          example: 'Краткое описание'
        create_time:
          type: string
          description: Время создания (14:04:24 30-04-21, not required on new)
          example: '14:04:24 30-04-21'
        ip:
          type: string
          description: device ip4
          example: '10.15.0.33'
        mac:
          type: string
          description: device mac
          example: '11:22:33:44:55:66'
        rt:
          type: integer
          description: route type (0-ufanet, 1-beeline)
          example: 1
        no_dhcp:
          type: integer
          description: (0-use dhcp, 1-dont use)
          example: 0
        defjump:
          type: string
          description: ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY
          example: 'ACCEPT'
        speed_in:
          type: string
          description: dl speed tc parameters
          example: 'quantum 6400 rate 1mbit prio 5'
        speed_out:
          type: string
          description: ul speed tc parameters
          example: 'quantum 6400 rate 1mbit ceil 1280kbit prio 5'
        qs:
          type: integer
          description: quote mode (0-disabled, 1-notify, 2-limit, 3-block)
          example: 2
        limit_in:
          type: integer
          description: quota limit in bytes
          example: 1073741824
        sum_limit_in:
          type: integer
          description: remaining limit in bytes (not required on new)
          example: 1073741824
        blocked:
          type: integer
          description: blocked flag (0-unblocked, 1-blocked)
          enum: [0, 1]
          example: 0
        flagged:
          type: integer
          description: sync flag (0-not set, 1-set)
          enum: [0, 1]
          example: 0
        profile:
          type: string
          description: device profile (key)
          example: 'gwtest1'
        profile_name:
          type: string
          description: device profile human readable name (передается в операциях чтения данных, игнорируется в операциях записи, редактирования)
          example: 'Тестовое подразделение'
        client_id:
          type: integer
          description: Код клиента владельца устройства (передается в операции чтения данных, игнорируется в операциях записи, редактирования)
          example: 456
        client_type:
          type: integer
          description: 'Тип клиента: 0-клиент, 1-сервер (передается в операции чтения данных, игнорируется в операциях записи, редактирования)'
        client_cn:
          type: string
          description: ФИО клиента владельца устройства (передается в операции чтения данных, игнорируется в операциях записи, редактирования)
          example: 'Иванов Иван Иванович'
        client_login:
          type: string
          description: Логин клиента владельца устройства (передается в операции чтения данных, игнорируется в операциях записи, редактирования)
          example: 'ivanovii'
      required:
        - name
        - ip
        - mac
        - no_dhcp
        - rt
        - defjump
        - speed_in
        - speed_out
        - qs
        - limit_in
        - profile


    stat_traffic_object:
      description: Traffic object (in/out)
      type: object
      properties:
        date:
          type: string
          description: Дата (дд-мм-гггг, обязательна в массивах данных по трафику, в записях по месяцам день игнорируется)
          example: '06-10-2021'
        in:
          type: integer
          description: input traffic (in bytes, -1 means no-data)
          example: 100
        out:
          type: integer
          description: output traffic (in bytes, -1 means no-data)
          example: 200
        fuzzy_in:
          type: integer
          description: not required, 1-input traffic value is roughly estimated
        fuzzy_out:
          type: integer
          description: not required, 1-output traffic value is roughly estimated
      required:
        - in
        - out


    stat_device_record:
      description: Traffic statistics device record
      type: object
      properties:
        id:
          type: integer
          description: Код устройства
        date:
          type: string
          description: Текущая дата (дд-мм-гггг)
          example: '06-10-2021'
        name:
          type: string
          description: Наименование устройства
          example: 'Рабочий ноутбук'
        defjump:
          type: string
          description: ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY
          example: 'ACCEPT'
        qs:
          type: integer
          description: quote mode (0-disabled, 1-notify, 2-limit, 3-block)
          example: 2
        limit_in:
          type: integer
          description: quota limit in bytes
          example: 1073741824
        sum_limit_in:
          type: integer
          description: remaining limit in bytes
          example: 1073741824
        blocked:
          type: integer
          description: blocked flag (0-unblocked, 1-blocked)
          example: 0
        profile:
          type: string
          description: device profile (key)
          example: 'gwtest1'
        profile_name:
          type: string
          description: device profile human readable name
          example: 'Тестовое подразделение'
        today_traf:
          #description: трафик за сегодня
          $ref: '#/components/schemas/stat_traffic_object'
        curmonth_traf:
          #description: трафик за текущий месяц
          $ref: '#/components/schemas/stat_traffic_object'
        traf:
          type: array
          description: массив данных по трафику
          items:
            $ref: '#/components/schemas/stat_traffic_object'
      required:
        - id
        - name
        - date
        - defjump
        - qs
        - limit_in
        - sum_limit_in
        - blocked
        - profile
        - today_traf
        - curmonth_traf
        - traf

        
    stat_server_record:
      description: Traffic statistics server record
      type: object
      properties:
        id:
          type: integer
          description: Код сервера
        date:
          type: string
          description: Текущая дата (дд-мм-гггг)
          example: '06-10-2021'
        cn:
          type: string
          description: Наименование сервера
          example: 'Сервер DC1'
        email:
          type: string
          description: Email для уведомлений
          example: 'user@domain.tld'
        email_notify:
          type: integer
          description: Флаг извещения по email, 0 или 1
          example: 1
        defjump:
          type: string
          description: ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY
          example: 'ACCEPT'
        qs:
          type: integer
          description: quote mode (0-disabled, 1-notify, 2-limit, 3-block)
          example: 2
        limit_in:
          type: integer
          description: quota limit in bytes
          example: 1073741824
        sum_limit_in:
          type: integer
          description: remaining limit in bytes
          example: 1073741824
        blocked:
          type: integer
          description: blocked flag (0-unblocked, 1-blocked)
          example: 0
        profile:
          type: string
          description: server profile (key)
          example: 'gwtest1'
        profile_name:
          type: string
          description: server profile human readable name
          example: 'Тестовое подразделение'
        today_traf:
          #description: трафик за сегодня
          $ref: '#/components/schemas/stat_traffic_object'
        curmonth_traf:
          #description: трафик за текущий месяц
          $ref: '#/components/schemas/stat_traffic_object'
        traf:
          type: array
          description: массив данных по трафику
          items:
            $ref: '#/components/schemas/stat_traffic_object'
      required:
        - id
        - cn
        - date
        - defjump
        - qs
        - limit_in
        - sum_limit_in
        - blocked
        - profile
        - today_traf
        - curmonth_traf
        - traf


    stat_client_record:
      description: Traffic statistics client record
      type: object
      properties:
        id:
          type: integer
          description: Код клиента
        date:
          type: string
          description: Текущая дата (дд-мм-гггг)
          example: '06-10-2021'
        cn:
          type: string
          description: Фамилия Иия Отчество
          example: 'Иванов Иван Иванович'
        guid:
          type: string
          description: ObjectGUID клиента, возможно пустое для клиентов добавленных вручную
          example: 'b95108ab-236a-4534-9ef0-6b8fa1cd59fd'
        login:
          type: string
          description: Логин клиента
          example: 'user'
        email:
          type: string
          description: Email клиента
          example: 'user@domain.tld'
        email_notify:
          type: integer
          description: Флаг извещения по email клиента, 0 или 1
          example: 1
        devices:
          type: array
          description: массив данных трафика по устройствам клиента
          items:
            $ref: '#/components/schemas/stat_device_record'
      required:
        - id
        - cn
        - login
        - guid
        - date
        - devices


    profile_record:
      description: Profile record
      type: object
      properties:
        id:
          type: integer
          description: Код профиля. Not required on new.
        profile:
          type: string
          description: Ключ профиля
        name:
          type: string
          description: Наименование профиля
      required:
        - profile
        - name


    profile_full_record:
      description: Profile record including agents list
      type: object
      properties:
        id:
          type: integer
          description: Код профиля
        profile:
          type: string
          description: Ключ профиля
        name:
          type: string
          description: Наименование профиля
        agents:
          type: array
          description: Массив записей об агентах
          items:
            $ref: '#/components/schemas/profile_agent_record'
      required:
        - id
        - profile
        - name
        - agents


    profile_agent_record:
      description: Agent record
      type: object
      properties:
        id:
          type: integer
          description: Код агента. Not required on new.
        name:
          type: string
          description: Наименование агента
        type:
          type: string
          description: 'Тип (подсистема) агента, возможны 2 формата: тип или тип@имя_хоста. Второй вариант используется в случае, когда в одном профиле имеются несколько агентов одного типа.'
          example: dhcpsyn@plksrv1
        url:
          type: string
          description: Url агента
        block:
          type: integer
          enum: [0, 1]
          description: '1-агент использует (и поддерживает) блокировку, 0-нет'
        profile:
          type: string
          description: device profile (передается в операциях чтения данных, игнорируется в операциях записи, редактирования)
          example: 'gwtest1'
        profile_name:
          type: string
          description: device profile human readable name (передается в операциях чтения данных, игнорируется в операциях записи, редактирования)
          example: 'Тестовое подразделение'
        flagged:
          type: integer
          description: sync flag for agent (0-not set, 1-set, передается в операциях чтения данных, игнорируется в операциях записи, редактирования)
          enum: [0, 1]
          example: 0
      required:
        - name
        - type
        - url
        - block


    system_profile_record:
      description: Profile record including agents list (system state)
      type: object
      properties:
        profile:
          type: string
          description: Ключ профиля
        name:
          type: string
          description: Наименование профиля
        lastcheck:
          type: string
          description: Дата и время последней проверки, чч:мм:сс дд-мм-гг, пустое если проверка еще не производилась.
        agents:
          type: array
          description: Массив записей об агентах
          items:
            description: Агент системы
            type: object
            properties:
              name:
                type: string
                description: Наименование агента
              type:
                type: string
                description: 'Тип (подсистема) агента, возможны 2 формата: тип или тип@имя_хоста. Второй вариант используется в случае, когда в одном профиле имеются несколько агентов одного типа.'
              url:
                type: string
                description: Url агента
              block:
                type: integer
                enum: [0, 1]
                description: '1-агент использует (и поддерживает) блокировку, 0-нет'
              state:
                type: integer
                description: 'Состояние агента: 1-нормальное, 0-ошибка, 2-неизвестно'
              status:
                type: string
                description: Статус агента или описание ошибки
                example: 'rtsyn@wispa (3.00)'
              lastcheck:
                type: string
                description: Дата и время последней проверки, чч:мм:сс дд-мм-гг, пустое если проверка еще не производилась.
            required:
              - name
              - type
              - url
              - block
              - state
              - status
              - lastcheck
      required:
        - profile
        - name
        - lastcheck
        - agents


    database_info_object:
      description: Информация по базе данных
      type: object
      properties:
        name:
          type: string
          description: имя БД
          example: inet
        hostport:
          type: string
          description: хост и порт (при наличии) сервера БД
          example: contoso.somedomain
        scheme:
          type: string
          description: тип (схема) БД
          example: mysql
        state:
          type: integer
          enum: [0, 1]
          description: Результат пинга БД (0, 1)
          example: 1
        status:
          type: string
          description: Версия СУБД при успешном пинге, 'нет ответа' при неуспешном
          example: '10.1.26-MariaDB-0'
      required:
        - name
        - hostport
        - scheme
        - state
        - status