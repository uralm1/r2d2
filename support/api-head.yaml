openapi: 3.0.0
info:
  version: '3.1'
  title: The R2d2 Head api
  description: 'API модуля Head'
paths:
  /subsys:
    get:
      summary: Имя модуля агента и версия
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: head@wispa (3.00)
            application/json:
              schema:
                type: object
                properties:
                  subsys:
                    type: string
                    example: 'head@wispa'
                  version:
                    type: string
                    example: '3.00'

  /log:
    post:
      summary: Записывает сообщение в op_log

      requestBody:
        description: log data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/log_record'
          '*/*':
            schema:
              type: string
              example: Initialization started
              description: string to put into log

      responses:
        '200':
          description: Success
        '415':
          description: Invalid JSON request body
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /log/{subsys}:
    post:
      summary: Записывает сообщение в op_log
      parameters:
        - name: subsys
          in: path
          required: true
          description: Subsystem name to put in the log record. Игнорируется если также передано в теле запроса.
          example: router@host
          schema:
            type: string
            
      requestBody:
        description: log data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/log_record'
          '*/*':
            schema:
              type: string
              example: Initialization started
              description: string to put into log

      responses:
        '200':
          description: Success
        '415':
          description: Invalid JSON request body
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /clients:
    get:
      summary: Load devices data for profiles
      deprecated: true
      parameters:
        - name: profile
          in: query
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/device_record'
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /devices:
    get:
      summary: Load devices data for profiles
      parameters:
        - name: profile
          in: query
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/device_record'
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /client/{device_id}:
    get:
      summary: Load device data
      deprecated: true
      parameters:
        - name: device_id
          in: path
          required: true
          description: 'Device id'
          schema:
            type: integer
            example: 11
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /device/{device_id}:
    get:
      summary: Load device data
      parameters:
        - name: device_id
          in: path
          required: true
          description: 'Device id'
          schema:
            type: integer
            example: 11
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/device_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /trafstat:
    post:
      summary: Submit traffic statistics for profiles
      parameters:
        - name: profile
          in: query
          required: true
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: traffic statistics
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/traf_stats'
      responses:
        '200':
          description: Success
        '404':
          description: Bad parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message


  /refreshed:
    post:
      summary: Извещение о выполненной операции обновления
      description: Агенты вызывают данную функцию после удачного завершения обновления клиента. Используется для сброса флагов обновления в БД.

      parameters:
        - name: profile
          in: query
          required: true
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: successful refresh information
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/refresh_stats'

      responses:
        '200':
          description: Success
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /blocked:
    post:
      summary: Извещение о выполненной операции блокирования/разблокирования
      description: Агенты вызывают данную функцию после удачного завершения блокирования/разблокирования клиента. Используется для сброса флага блокирования в БД.

      parameters:
        - name: profile
          in: query
          required: true
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: successful block/unblock information
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/block_stats'

      responses:
        '200':
          description: Success
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message
    
  /reloaded:
    post:
      summary: Извещение о выполненной операции перезагрузки всех клиентов
      description: Агенты вызывают данную функцию после завершения перезагрузки всех клиентов.

      parameters:
        - name: profile
          in: query
          required: true
          description: profile name (multiple are possible)
          schema:
            type: string
            example: 'gwtest1'
      requestBody:
        description: successful reload information
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/reload_stats'

      responses:
        '200':
          description: Success
        '503':
          description: Operation error, bad json etc
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /ui/list:
    get:
      summary: Получение списка клиентов и серверов
      description: Запрос списка для интерфейса пользователя.
      parameters:
        - name: page
          in: query
          description: Текущая страница (начиная с 1)
          schema:
            type: integer
            example: 2
        - name: lop
          in: query
          required: true
          description: Число строк на странице (lines_on_page)
          schema:
            type: integer
            example: 20

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_list_json'
        '400':
          description: Ошибка в параметрах, в основном неверный номер текущей страницы
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /ui/server/{server_id}:
    get:
      summary: 'Запрос данных по серверу'
      parameters:
        - name: server_id
          in: path
          required: true
          description: 'Server id'
          schema:
            type: integer

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

    put:
      summary: 'Редактирование данных сервера'
      parameters:
        - name: server_id
          in: path
          required: true
          description: 'Server id'
          schema:
            type: integer

      requestBody:
        description: 'Server data'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/server_record'

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

    delete:
      summary: 'Удаление сервера'
      parameters:
        - name: server_id
          in: path
          required: true
          description: 'Server id'
          schema:
            type: integer

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /ui/server:
    post:
      summary: 'Добавление нового сервера'
      requestBody:
        description: 'Server data'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/server_record'

      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                description: 'Inserted server id'
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message      

  /ui/client/{client_id}:
    get:
      summary: 'Запрос данных по клиенту'
      parameters:
        - name: client_id
          in: path
          required: true
          description: 'Client id'
          schema:
            type: integer

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_full_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /ui/client:
    post:
      summary: 'Добавление нового клиента'
      requestBody:
        description: 'Client data'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/client_record'

      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                description: 'Inserted client id'
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message      

  /ui/device/{client_id}/{device_id}:
    get:
      summary: 'Данные по клиентскому устройству'
      parameters:
        - name: client_id
          in: path
          required: true
          description: 'Client id'
          schema:
            type: integer
        - name: device_id
          in: path
          required: true
          description: 'Device id'
          schema:
            type: integer

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_device_record'
        '404':
          description: Not found, including bad client_id or device_id parameters
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

    put:
      summary: 'Редактирование клиентского устройства'
      parameters:
        - name: client_id
          in: path
          required: true
          description: 'Client id'
          schema:
            type: integer
        - name: device_id
          in: path
          required: true
          description: 'Device id'
          schema:
            type: integer

      requestBody:
        description: 'Server data'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/client_device_record'

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad client_id or device_id parameters
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

    delete:
      summary: 'Удаление клиентского устройства'
      parameters:
        - name: client_id
          in: path
          required: true
          description: 'Client id'
          schema:
            type: integer
        - name: device_id
          in: path
          required: true
          description: 'Device id'
          schema:
            type: integer

      responses:
        '200':
          description: Success
        '404':
          description: Not found, including bad client_id or device_id parameters
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /ui/device/{client_id}:
    post:
      summary: 'Добавление нового клиентского устройства'
      parameters:
        - name: client_id
          in: path
          required: true
          description: 'Client id'
          schema:
            type: integer
      requestBody:
        description: 'Device data'
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/client_device_record'

      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: integer
                description: 'Inserted device id'
        '404':
          description: Not found, including bad client_id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /ui/oplog:
    get:
      summary: Получение лога операций
      description: Просмотр лога операций для интерфейса пользователя.
      parameters:
        - name: page
          in: query
          description: Текущая страница (начиная с 1)
          schema:
            type: integer
            example: 2
        - name: lop
          in: query
          required: true
          description: Число строк на странице (lines_on_page)
          schema:
            type: integer
            example: 50

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ui_oplog_json'
        '400':
          description: Ошибка в параметрах, в основном неверный номер текущей страницы
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

# Added by API Auto Mocking Plugin
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/uralm1/head/3.1

components:
  schemas:
    log_record:
      description: Data to put in DB log
      type: object
      properties:
        subsys:
          type: string
          description: Optional subsystem name instead of subsys parameter
          example: router@host
        info:
          type: string
          example: Initialization started
          description: String to put into log
          
    device_record:
      description: Device record
      type: object
      properties:
        id:
          type: integer
          description: device id
          example: 11
        ip:
          type: string
          description: device ip4
          example: '10.15.0.33'
        mac:
          type: string
          description: device mac
          example: '11:22:33:44:55:66'
        rt:
          type: integer
          description: 'route type (0-ufanet, 1-beeline)'
          example: 1
        no_dhcp:
          type: integer
          description: '(0-use dhcp, 1-dont use)'
          example: 0
        defjump:
          type: string
          description: 'ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY'
          example: 'ACCEPT'
        speed_in:
          type: string
          description: 'dl speed tc parameters'
          example: 'quantum 6400 rate 1mbit prio 5'
        speed_out:
          type: string
          description: 'ul speed tc parameters'
          example: 'quantum 6400 rate 1mbit ceil 1280kbit prio 5'
        qs:
          type: integer
          description: 'quote mode (0-disabled, 1-notify, 2-limit, 3-block)'
          example: 2
        blocked:
          type: integer
          description: 'blocked flag (0-unblocked, 1-blocked)'
          example: 0
        profile:
          type: string
          description: 'client profile name'
          example: 'gwtest1'
    
    traf_stats:
      description: Traffic statistics
      type: object
      additionalProperties:
        type: object
        description: Traffic statistics record for client id
        properties:
          in:
            type: integer
            description: input traffic (in bytes)
            example: 100
          out:
            type: integer
            description: output traffic (in bytes)
            example: 200
      example:
        1: {in: 100, out: 200}
        2: {in: 10, out: 20}
        10: {in: 110, out: 220}

    refresh_stats:
      description: Successful refresh information
      type: object
      properties:
        subsys:
          type: string
          description: Subsystem name. Имя агента должно совпадать с одним из прописанных в коде.
          example: agent@host
        id:
          type: integer
          description: client id
          example: 11
          
    block_stats:
      description: Successful block/unblock information
      type: object
      properties:
        subsys:
          type: string
          description: Subsystem name. Имя агента должно совпадать с одним из прописанных в коде.
          example: agent@host
        id:
          type: integer
          description: client id
          example: 11
        qs:
          type: integer
          description: Operation (0-unblocked, 2-limited, 3-blocked)
          example: 0
          
    reload_stats:
      description: Successful reload information
      type: object
      properties:
        subsys:
          type: string
          description: Subsystem name. Имя агента должно совпадать с одним из прописанных в коде.
          example: agent@host
          
    ui_oplog_json:
      description: Страница данных лога операций
      type: object
      properties:
        lines_total:
          type: integer
          description: Всего строк в БД лога
        pages:
          type: integer
          description: Всего страниц данных в логе
        page:
          type: integer
          description: Текущая страница, возвращенная в данном объекте. Равна параметру запроса.
        lines_on_page:
          type: integer
          description: Строк на одной странице. Равно параметру запроса.
        d:
          type: array
          description: Массив строк
          items:
            description: Строка лога
            type: object
            properties:
              id:
                type: integer
                description: Код записи лога
                example: '54321'
              date:
                type: string
                description: Время события (14:04:24 30/04/21)
                example: '14:04:24 30/04/21'
              subsys:
                type: string
                description: Подсистема
                example: 'gwsyn@gwsev'
              info:
                type: string
                description: Описание события
                example: 'Finished traffic_stat'
            example:
              - id: 54321
                date: '14:04:24 30/04/21'
                subsys: 'gwsyn@gwsev'
                info: 'Finished traffic_stat'
      example:
        lines_total: 1000
        pages: 10
        page: 1
        lines_on_page: 100
        d:
          - id: 54321
            date: '14:04:24 30/04/21'
            subsys: 'gwsyn@gwsev'
            info: 'Finished traffic_stat'

    ui_list_json:
      description: 'Страница данных перечня клиентов'
      type: object
      properties:
        lines_total:
          type: integer
          description: Всего строк данных
        pages:
          type: integer
          description: Всего страниц данных
        page:
          type: integer
          description: Текущая страница, возвращенная в данном объекте. Равна параметру запроса.
        lines_on_page:
          type: integer
          description: Строк на одной странице. Равно параметру запроса.
        d:
          type: array
          description: Массив строк
          items:
            $ref: '#/components/schemas/client_full_record'

      example:
        lines_total: 1000
        pages: 50
        page: 1
        lines_on_page: 20
        d:
          - id: 54321
            cn: 'Сервер DC1'
            desc: 'Описание сервера'
            create_time: '14:04:24 30/04/21'
            ip: '1.2.3.4'
            mac: '11:22:33:44:55:66'
            rt: 1
            no_dhcp: 0
            defjump: 'ACCEPT'
            speed_in: 'quantum 6400 rate 1mbit prio 5'
            speed_out: 'quantum 6400 rate 1mbit prio 5'
            qs: 2
            limit_in: 1073741824
            blocked: 0
            profile: 'gwtest1'
            
    server_record:
      description: 'Server record'
      type: object
      properties:
        id:
          type: integer
          description: 'Код сервера (not required on new)'
        cn:
          type: string
          description: Наименование
          example: 'Сервер DC1'
        desc:
          type: string
          description: 'Описание сервера, возможно пустое'
          example: 'Краткое описание'
        create_time:
          type: string
          description: 'Время создания (14:04:24 30/04/21, not required on new)'
          example: '14:04:24 30/04/21'
        email:
          type: string
          description: 'Email для уведомлений'
          example: 'user@domain.tld'
        ip:
          type: string
          description: client ip4
          example: '10.15.0.33'
        mac:
          type: string
          description: client mac
          example: '11:22:33:44:55:66'
        rt:
          type: integer
          description: 'route type (0-ufanet, 1-beeline)'
          example: 1
        no_dhcp:
          type: integer
          description: '(0-use dhcp, 1-dont use)'
          example: 0
        defjump:
          type: string
          description: 'ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY'
          example: 'ACCEPT'
        speed_in:
          type: string
          description: 'dl speed tc parameters'
          example: 'quantum 6400 rate 1mbit prio 5'
        speed_out:
          type: string
          description: 'ul speed tc parameters'
          example: 'quantum 6400 rate 1mbit ceil 1280kbit prio 5'
        qs:
          type: integer
          description: 'quote mode (0-disabled, 1-notify, 2-limit, 3-block)'
          example: 2
        limit_in:
          type: integer
          description: 'quota limit in bytes'
          example: 1073741824
        blocked:
          type: integer
          description: 'blocked flag (0-unblocked, 1-blocked)'
          example: 0
        profile:
          type: string
          description: 'client profile name'
          example: 'gwtest1'
      required:
        - cn
        - ip
        - mac
        - no_dhcp
        - rt
        - defjump
        - speed_in
        - speed_out
        - qs
        - limit_in
        - profile

    client_record:
      description: 'Client record'
      type: object
      properties:
        id:
          type: integer
          description: 'Код клиента (not required on new)'
        cn:
          type: string
          description: 'Фамилия Иия Отчество'
          example: 'Иванов Иван Иванович'
        desc:
          type: string
          description: 'Описание клиента, возможно пустое'
          example: 'Краткое описание'
        guid:
          type: string
          description: 'ObjectGUID клиента, возможно пустое для клиентов добавленных вручную'
          example: 'b95108ab-236a-4534-9ef0-6b8fa1cd59fd'
        create_time:
          type: string
          description: 'Время создания (14:04:24 30/04/21, not required on new)'
          example: '14:04:24 30/04/21'
        login:
          type: string
          description: 'Логин клиента (пустой для серверов)'
          example: 'user'
        email:
          type: string
          description: 'Email клиента'
          example: 'user@domain.tld'
      required:
        - cn
        - guid
        - login

    client_full_record:
      description: 'Client list record including device list'
      type: object
      properties:
        id:
          type: integer
          description: 'Код клиента'
        type:
          type: integer
          description: 'Тип клиента: 0-клиент, 1-сервер'
        cn:
          type: string
          description: 'Фамилия Иия Отчество'
          example: 'Иванов Иван Иванович'
        desc:
          type: string
          description: 'Описание клиента, возможно пустое'
          example: 'Краткое описание'
        guid:
          type: string
          description: 'ObjectGUID клиента, возможно пустое для клиентов добавленных вручную'
          example: 'b95108ab-236a-4534-9ef0-6b8fa1cd59fd'
        create_time:
          type: string
          description: 'Время создания (14:04:24 30/04/21)'
          example: '14:04:24 30/04/21'
        login:
          type: string
          description: 'Логин клиента (пустой для серверов)'
          example: 'user'
        email:
          type: string
          description: 'Email клиента'
          example: 'user@domain.tld'
        devices:
          type: array
          description: 'Массив устройств'
          items:
            $ref: '#/components/schemas/client_device_record'
      required:
        - id
        - type
        - cn
        - desc
        - guid
        - create_time
        - login
        - email
        - devices
        
    client_device_record:
      description: 'Client device record'
      type: object
      properties:
        id:
          type: integer
          description: 'Код устройства (not required on new)'
        name:
          type: string
          description: Наименование
          example: 'Рабочий ноутбук'
        desc:
          type: string
          description: 'Описание, возможно пустое'
          example: 'Краткое описание'
        create_time:
          type: string
          description: 'Время создания (14:04:24 30/04/21, not required on new)'
          example: '14:04:24 30/04/21'
        ip:
          type: string
          description: device ip4
          example: '10.15.0.33'
        mac:
          type: string
          description: device mac
          example: '11:22:33:44:55:66'
        rt:
          type: integer
          description: 'route type (0-ufanet, 1-beeline)'
          example: 1
        no_dhcp:
          type: integer
          description: '(0-use dhcp, 1-dont use)'
          example: 0
        defjump:
          type: string
          description: 'ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY'
          example: 'ACCEPT'
        speed_in:
          type: string
          description: 'dl speed tc parameters'
          example: 'quantum 6400 rate 1mbit prio 5'
        speed_out:
          type: string
          description: 'ul speed tc parameters'
          example: 'quantum 6400 rate 1mbit ceil 1280kbit prio 5'
        qs:
          type: integer
          description: 'quote mode (0-disabled, 1-notify, 2-limit, 3-block)'
          example: 2
        limit_in:
          type: integer
          description: 'quota limit in bytes'
          example: 1073741824
        blocked:
          type: integer
          description: 'blocked flag (0-unblocked, 1-blocked)'
          example: 0
        profile:
          type: string
          description: 'device profile name'
          example: 'gwtest1'
      required:
        - name
        - ip
        - mac
        - no_dhcp
        - rt
        - defjump
        - speed_in
        - speed_out
        - qs
        - limit_in
        - profile