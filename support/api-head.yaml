openapi: 3.0.0
info:
  version: '3.00'
  title: The R2d2 Head api
  description: 'API модуля Head'
paths:
  /subsys:
    get:
      summary: Имя модуля агента и версия
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: string
                example: head@wispa (3.00)
            application/json:
              schema:
                type: object
                properties:
                  subsys:
                    type: string
                    example: 'head@wispa'
                  version:
                    type: string
                    example: '3.00'

  /log:
    post:
      summary: Записывает сообщение в op_log

      requestBody:
        description: log data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/log_record'
          '*/*':
            schema:
              type: string
              example: Initialization started
              description: string to put into log

      responses:
        '200':
          description: Success
        '415':
          description: Invalid JSON request body
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /log/{subsys}:
    post:
      summary: Записывает сообщение в op_log
      parameters:
        - name: subsys
          in: path
          required: true
          description: subsystem name to put in the log record
          schema:
            type: string
            
      requestBody:
        description: log data
        required: true
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/log_record'
          '*/*':
            schema:
              type: string
              example: Initialization started
              description: string to put into log

      responses:
        '200':
          description: Success
        '415':
          description: Invalid JSON request body
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /clients/{profile_id}:
    get:
      summary: load clients data for profile
      parameters:
        - name: profile_id
          in: path
          required: true
          description: profile id
          schema:
            type: integer
            example: 1
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/client_record'
        '404':
          description: Not found
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

  /client/{client_id}:
    get:
      summary: load client data
      parameters:
        - name: client_id
          in: path
          required: true
          description: client id
          schema:
            type: integer
            example: 11
            
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client_record'
        '404':
          description: Not found, including bad id parameter
          content:
            text/plain:
              schema:
                type: string
                description: error message
        '503':
          description: Operation error
          content:
            text/plain:
              schema:
                type: string
                description: error message

# Added by API Auto Mocking Plugin
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/uralm1/head/3.00

components:
  schemas:
    log_record:
      description: Data to put in DB log
      type: object
      properties:
        subsys:
          type: string
          description: optional subsystem name instead of subsys parameter
          example: router@host
        info:
          type: string
          example: Initialization started
          description: string to put into log
          
    client_record:
      description: Client record
      type: object
      properties:
        id:
          type: integer
          description: client id
          example: 11
        login:
          type: string
          description: client login (deprecated)
          example: 'abelguzina'
        ip:
          type: string
          description: client ip4
          example: '10.15.0.33'
        mac:
          type: string
          description: client mac
          example: '11:22:33:44:55:66'
        rt:
          type: integer
          description: route type (0-ufanet, 1-beeline)
          example: 1
        no_dhcp:
          type: integer
          description: '(0-use dhcp, 1-dont use)'
          example: 0
        defjump:
          type: string
          description: 'ACCEPT/DROP/HTTP_ICMP/HTTP_IM_ICMP/ICMP_ONLY'
          example: 'ACCEPT'
        speed_in:
          type: string
          description: 'dl speed tc parameters'
          example: 'quantum 6400 rate 1mbit prio 5'
        speed_out:
          type: string
          description: 'ul speed tc parameters'
          example: 'quantum 6400 rate 1mbit ceil 1280kbit prio 5'